{"mappings":"AAoBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACTH,EAAgBF,EAAQ,C,SAAEH,E,MAAUC,IAAWG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GACzEA,EAAM,G,CAzBAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAEC,iBACF,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,OAAOC,SACnCC,EAAeC,SAASN,EAAMO,MAAO,IACrCC,EAAYF,SAASL,EAAKM,MAAO,IACvC,IAAK,IAAIE,EAAQ,EAAGA,GAASP,EAAOK,MAAOE,GAAS,EAClDxB,EAAcwB,EAAOJ,GAAgBI,EAAQ,GAAKD,GAC/CE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,QAAQC,IAAI,uBAAqB1B,QAAiBC,MAAU,IAE7D0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBwB,QAAQC,IAAI,sBAAoB1B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form')\n\nform.addEventListener('submit', formSubmit);\n\nfunction formSubmit(e) { \n  e.preventDefault();\n  const { delay, step, amount } = e.target.elements;\n  const initialDelay = parseInt(delay.value, 10);\n  const stepValue = parseInt(step.value, 10);\n  for (let index = 1; index <= amount.value; index += 1) { \n    createPromise(index, initialDelay + (index - 1) * stepValue)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  };\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      shouldResolve ? resolve({ position, delay }) : reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","target","elements","initialDelay","parseInt","value","stepValue","index","then","console","log","catch"],"version":3,"file":"03-promises.d3d961d0.js.map"}